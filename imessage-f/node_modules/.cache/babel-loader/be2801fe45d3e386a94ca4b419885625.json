{"ast":null,"code":"var _jsxFileName = \"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Messages.css\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useSelector } from \"react-redux\";\nimport { selectMessageId, selectRoomName } from \"../redux/messageSlice\";\nimport SingleMessage from \"./SingleMessage\";\nimport { selectUser } from \"../redux/userSlice\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Messages() {\n  _s();\n\n  const pusher = new Pusher('93990f0577676c3cf663', {\n    cluster: 'us2'\n  });\n  const messageId = useSelector(selectMessageId);\n  const roomName = useSelector(selectRoomName);\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const getConvo = messageId => {\n    if (messageId) {\n      axios.get(`/messages/chat?id=${messageId}`).then(res => {\n        setMessages(res.data[0].message_content);\n      });\n    }\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/messages/new?id=${messageId}`, {\n      message: input,\n      time: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    pusher.unsubscribe('messages');\n    getConvo(messageId);\n  }, [messageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"messages_title\",\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages_body\",\n      children: messages.map(_ref => {\n        let {\n          user,\n          _id,\n          message,\n          time\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(SingleMessage, {\n          id: _id,\n          sender: user,\n          message: message,\n          time: time\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"iMessage\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n        className: \"emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {\n        className: \"mic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"TeFrKMGsoyzTo0i2MVaCIZrRBPY=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/Messages.js"],"names":["React","useEffect","useState","EmojiEmotionsIcon","MicIcon","useSelector","selectMessageId","selectRoomName","SingleMessage","selectUser","Pusher","axios","Messages","pusher","cluster","messageId","roomName","user","input","setInput","messages","setMessages","getConvo","get","then","res","data","message_content","sendMessage","e","preventDefault","post","message","time","Date","now","unsubscribe","map","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Messages.css\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useSelector } from \"react-redux\";\nimport { selectMessageId, selectRoomName } from \"../redux/messageSlice\";\nimport SingleMessage from \"./SingleMessage\";\nimport { selectUser } from \"../redux/userSlice\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\n\n\n\nfunction Messages() {\n    const pusher = new Pusher('93990f0577676c3cf663', {\n      cluster: 'us2'\n    });\n\n    const messageId = useSelector(selectMessageId);\n    const roomName = useSelector(selectRoomName);\n    const user = useSelector(selectUser);\n    const [input,setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const getConvo = (messageId) => {\n        if (messageId) {\n            axios.get(`/messages/chat?id=${messageId}`).then((res) => {\n                setMessages(res.data[0].message_content)\n      })\n    }\n  }\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        axios.post(`/messages/new?id=${messageId}`, {\n            message: input,\n            time: Date.now(),\n            user: user\n    })\n\n    setInput(\"\");\n\n    };\n\n  useEffect(() => {\n      pusher.unsubscribe('messages');\n      getConvo(messageId);\n      \n  }, [messageId]);\n\n  return (\n        <div className = \"messages\">\n            <div className=\"messages_header\">\n                <h4>\n                    To:<span className=\"messages_title\">{roomName}</span>\n                </h4>\n                <div className=\"details_icon\">\n                    <p> Details</p>\n                </div>\n            </div>\n            <div className=\"messages_body\">\n                {messages.map(({ user, _id, message, time }) => (\n            <SingleMessage key={_id} id={_id} sender={user} message={message} time={time} />\n          ))}\n            </div>\n            <div className=\"message_input\">\n                <form>\n                    <input\n                    value = {input}\n                    onChange={(e) => setInput(e.target.value)} \n                    placeholder='iMessage'\n                    type=\"text\" />\n                <button onClick = {sendMessage} type=\"submit\">\n                        ↑\n                </button>\n                </form>\n                <EmojiEmotionsIcon className = \"emoji\" />\n                <MicIcon className = \"mic\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Menu.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport MenuChat from \"./MenuChat\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/userSlice\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { auth, provider } from \"../Login/firebase\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Menu() {\n  _s();\n\n  const pusher = new Pusher('93990f0577676c3cf663', {\n    cluster: 'us2'\n  });\n\n  const signOut = () => {\n    auth.signOut(provider).catch(error => alert(error.message));\n  };\n\n  const user = useSelector(selectUser);\n  const [rooms, setRooms] = useState([]);\n\n  const getRooms = () => {\n    axios.get('/messages/messageList').then(res => {\n      setRooms(res.data);\n    });\n  };\n\n  const creatingRoom = e => {\n    e.preventDefault();\n    const roomName = prompt('Enter a Groupchat name');\n    const firstMessage = prompt('Send your first message to the Groupchat');\n\n    if (roomName && firstMessage) {\n      let messageId = '';\n      axios.post('/messages/room', {\n        roomName: roomName\n      }).then(res => {\n        messageId = res.data._id;\n      }).then(() => {\n        axios.post(`/messages/new?id=${messageId}`, {\n          message: firstMessage,\n          time: Date.now(),\n          user: user\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    getRooms();\n    const channel = pusher.subscribe('rooms');\n    channel.bind('newRoom', function (data) {\n      getChats();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_header\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n          onClick: () => signOut(),\n          className: \"sign_out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_input\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchbar\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"first\",\n        className: \"new_message_button\",\n        children: /*#__PURE__*/_jsxDEV(RateReviewOutlinedIcon, {\n          onClick: creatingRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_chats\",\n      children: rooms.map(_ref => {\n        let {\n          id,\n          name\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(MenuChat, {\n          id: id,\n          roomName: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Menu, \"fP28nKdYu9U7bgWk2WuhmWjaR3Q=\", false, function () {\n  return [useSelector];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/Menu.js"],"names":["React","useState","useEffect","IconButton","SearchIcon","RateReviewOutlinedIcon","MenuChat","useSelector","selectUser","CancelIcon","auth","provider","Pusher","axios","Menu","pusher","cluster","signOut","catch","error","alert","message","user","rooms","setRooms","getRooms","get","then","res","data","creatingRoom","e","preventDefault","roomName","prompt","firstMessage","messageId","post","_id","time","Date","now","channel","subscribe","bind","getChats","map","id","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./Menu.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport MenuChat from \"./MenuChat\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/userSlice\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport  { auth, provider } from \"../Login/firebase\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\n\n\n\nfunction Menu() {\n  const pusher = new Pusher('93990f0577676c3cf663', {\n      cluster: 'us2'\n    });\n  const signOut = () => {\n    auth.signOut(provider).catch((error) => alert(error.message));\n  };\n  const user = useSelector(selectUser);\n  const [rooms, setRooms] = useState([]);\n\n  const getRooms = () => {\n    axios.get('/messages/messageList').then((res) =>{\n      setRooms(res.data);\n        })\n    }\n  const creatingRoom = (e) => {\n    e.preventDefault()\n    const roomName = prompt('Enter a Groupchat name')\n    const firstMessage = prompt('Send your first message to the Groupchat')\n    if (roomName && firstMessage) {\n      let messageId = ''\n      axios.post('/messages/room', {\n        roomName: roomName\n      }).then((res) => {\n        messageId = res.data._id\n      }).then(() => {\n        axios.post(`/messages/new?id=${messageId}`, {\n          message: firstMessage,\n          time: Date.now(),\n          user: user\n        })\n      })\n    }\n  }\n   \n    useEffect(()=>{\n        getRooms()\n        const channel = pusher.subscribe('rooms');\n        channel.bind('newRoom', function (data) {\n      getChats()\n    });\n        } , []);\n\n  return (\n        <div className=\"menu\">\n            <div className=\"menu_header\">\n                <IconButton>\n                <CancelIcon\n                onClick={() => signOut()}\n                className = \"sign_out\"/>\n                </IconButton>\n                <div className=\"menu_input\">\n                    <SearchIcon className = \"search\" />\n                    <input className = \"searchbar\"  placeholder='Search' />\n                </div>\n                <IconButton variant = 'first' className = 'new_message_button'>\n                    <RateReviewOutlinedIcon onClick = {creatingRoom}\n                    />\n                </IconButton>\n            </div>\n                <div className=\"menu_chats\">\n                    {rooms.map(({id, name}) =>(\n                    <MenuChat key = {id} id = {id}  roomName = {name}  />\n                    ))}\n                </div>\n        </div>\n        \n    ) \n}\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from \"@material-ui/core\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { selectMessageId, selectroomName } from \"./features/messageSlice\";\nimport db from \"./firebase\";\nimport Message from \"./SingleMessage\";\nimport firebase from 'firebase/compat/app';\nimport { selectUser } from \"./features/userSlice\";\nimport FlipMove from \"react-flip-move\";\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const roomName = useSelector(selectroomName);\n  const messageId = useSelector(selectmessageId);\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = messageId => {\n    if (messageId) {\n      axios.get(`/messages/chat?id=${messageId}`).then(res => {\n        setMessages(res.data[0].message_content);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getConversation(chatId);\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/messages/new?id=${chatId}`, {\n      message: input,\n      time: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(_ref => {\n          let {\n            user,\n            _id,\n            message,\n            time\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Message, {\n            id: _id,\n            sender: user,\n            message: message,\n            time: time\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"iMessage\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MicNoneIcon, {\n          className: \"chat__mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"cEXqlRAaU+Jm7Ssz1MnTjt9ZJ1k=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Chat.js"],"names":["IconButton","MicNoneIcon","React","useEffect","useState","useSelector","selectMessageId","selectroomName","db","Message","firebase","selectUser","FlipMove","axios","Chat","user","input","setInput","roomName","messageId","selectmessageId","messages","setMessages","getConversation","get","then","res","data","message_content","chatId","sendMessage","e","preventDefault","post","message","time","Date","now","map","_id","target","value"],"mappings":"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","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Chat.css\";\nimport { selectMessageId, selectroomName } from \"./features/messageSlice\";\nimport db from \"./firebase\";\nimport Message from \"./SingleMessage\";\nimport firebase from 'firebase/compat/app';\nimport { selectUser } from \"./features/userSlice\";\nimport FlipMove from \"react-flip-move\";\n\nimport axios from './axios'\n\n\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const roomName = useSelector(selectroomName);\n  const messageId = useSelector(selectmessageId);\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = (messageId) => {\n    if (messageId) {\n      axios.get(`/messages/chat?id=${messageId}`).then((res) => {\n        setMessages(res.data[0].message_content)\n      })\n    }\n  }\n\n  useEffect(() => {\n\n    getConversation(chatId)\n  }, [chatId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    axios.post(`/messages/new?id=${chatId}`, {\n      message: input,\n      time: Date.now(),\n      user: user\n    })\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <h4>\n          To: <span className=\"chat__name\">{roomName}</span>\n        </h4>\n        <strong>Details</strong>\n      </div>\n\n      {/* chat messages */}\n      <div className=\"chat__messages\">\n        <FlipMove>\n          {messages.map(({ user, _id, message, time }) => (\n            <Message key={_id} id={_id} sender={user} message={message} time={time} />\n          ))}\n        </FlipMove>\n      </div>\n\n      <div className=\"chat__input\">\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"iMessage\"\n            type=\"text\"\n          />\n          <button onClick={sendMessage}>Send Message</button>\n        </form>\n\n        <IconButton>\n          <MicNoneIcon className=\"chat__mic\" />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}
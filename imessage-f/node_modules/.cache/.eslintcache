[{"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/index.js":"1","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/App.js":"2","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/serviceWorker.js":"3","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/axios.js":"4","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/userSlice.js":"5","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/messageSlice.js":"6","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/store.js":"7","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/reportWebVitals.js":"8","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Login/Login.js":"9","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/Menu.js":"10","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/MenuChat.js":"11","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/Messages.js":"12","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/SingleMessage.js":"13","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Login/firebase.js":"14"},{"size":615,"mtime":1642921510784,"results":"15","hashOfConfig":"16"},{"size":1411,"mtime":1642927958663,"results":"17","hashOfConfig":"16"},{"size":5014,"mtime":1642896410990,"results":"18","hashOfConfig":"16"},{"size":123,"mtime":1642896927007,"results":"19","hashOfConfig":"16"},{"size":439,"mtime":1642897129160,"results":"20","hashOfConfig":"16"},{"size":546,"mtime":1642926979935,"results":"21","hashOfConfig":"16"},{"size":236,"mtime":1642926946154,"results":"22","hashOfConfig":"16"},{"size":362,"mtime":1642921544810,"results":"23","hashOfConfig":"16"},{"size":873,"mtime":1642927986639,"results":"24","hashOfConfig":"16"},{"size":2641,"mtime":1643781238417,"results":"25","hashOfConfig":"16"},{"size":1390,"mtime":1642934244323,"results":"26","hashOfConfig":"16"},{"size":2655,"mtime":1642933869245,"results":"27","hashOfConfig":"16"},{"size":644,"mtime":1642927876810,"results":"28","hashOfConfig":"16"},{"size":639,"mtime":1642927845721,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15425pt",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/index.js",[],["64","65"],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/App.js",["66"],"import './App.css';\nimport Menu from './SideComponents/Menu';\nimport Messages from './Messages/Messages';\nimport React, {useEffect} from 'react';\nimport Login from './Login/Login';\nimport { selectUser, login, logout } from './redux/userSlice';\nimport {auth} from './Login/firebase';\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n\n\n  // useEffect(() => {\n  //   \n  //   const channel = pusher.subscribe('message');\n  //   channel.bind('inserted', (newMessage) => {\n  //     setMessages([...messages, newMessage]);\n  //   });\n\n  //   return () => {\n  //     channel.unbind_all();\n  //     channel.unsubscribe();\n  //   };\n  // }, [messages]);\n\n  //new\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user is logged in\n        dispatch(\n          login({\n            uid: authUser.uid,\n            pic: authUser.photoURL,\n            email: authUser.email,\n            displayName: authUser.displayName,\n          })\n        );\n      } else {\n        // user is logged out\n        dispatch(logout());\n      }\n    });\n  }, []);\n  return (\n    <div className=\"app\">\n      {!user ? (\n          <Login />\n        ) : (\n          <div className=\"body\">\n            <Menu />\n            <Messages />\n      </div>\n        )}\n    </div>\n      \n  );\n}\n\nexport default App;\n","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/serviceWorker.js",[],["67","68"],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/axios.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/userSlice.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/messageSlice.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/redux/store.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/reportWebVitals.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Login/Login.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/Menu.js",["69"],"import React, {useState, useEffect} from \"react\";\nimport \"./Menu.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport MenuChat from \"./MenuChat\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../redux/userSlice\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport  { auth, provider } from \"../Login/firebase\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\n\n\n\nfunction Menu() {\n  const pusher = new Pusher('93990f0577676c3cf663', {\n      cluster: 'us2'\n    });\n  const signOut = () => {\n    auth.signOut(provider).catch((error) => alert(error.message));\n  };\n  const user = useSelector(selectUser);\n  const [rooms, setRooms] = useState([]);\n\n  const getRooms = () => {\n    axios.get('/messages/messageList').then((res) =>{\n      setRooms(res.data);\n        })\n    }\n  const creatingRoom = (e) => {\n    e.preventDefault()\n    const roomName = prompt('Enter a Groupchat name')\n    const firstMessage = prompt('Send your first message to the Groupchat')\n    if (roomName && firstMessage) {\n      let messageId = ''\n      axios.post('/messages/room', {\n        roomName: roomName\n      }).then((res) => {\n        messageId = res.data._id\n      }).then(() => {\n        axios.post(`/messages/new?id=${messageId}`, {\n          message: firstMessage,\n          time: Date.now(),\n          user: user\n        })\n      })\n    }\n  }\n   \n    useEffect(()=>{\n        getRooms()\n        const channel = pusher.subscribe('rooms');\n        channel.bind('newRoom', function (data) {\n          getRooms()\n    });\n        } , []);\n\n  return (\n        <div className=\"menu\">\n            <div className=\"menu_header\">\n                <IconButton>\n                <CancelIcon\n                onClick={() => signOut()}\n                className = \"sign_out\"/>\n                </IconButton>\n                <div className=\"menu_input\">\n                    <SearchIcon className = \"search\" />\n                    <input className = \"searchbar\"  placeholder='Search' />\n                </div>\n                <IconButton variant = 'first' className = 'new_message_button'>\n                    <RateReviewOutlinedIcon onClick = {creatingRoom}\n                    />\n                </IconButton>\n            </div>\n                <div className=\"menu_chats\">\n                    {rooms.map(({id, name}) =>(\n                    <MenuChat key = {id} id = {id}  roomName = {name}  />\n                    ))}\n                </div>\n        </div>\n        \n    ) \n}\n\nexport default Menu;\n","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/SideComponents/MenuChat.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport \"./MenuChat.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { setRooms } from \"../redux/messageSlice\";\nimport { useDispatch } from \"react-redux\";\n//import * as timeago from \"timeago.js\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\n\nfunction MenuChat({ id, roomName }) {\n    const pusher = new Pusher('93990f0577676c3cf663', {\n      cluster: 'us2'\n    });\n    const dispatch = useDispatch();\n    const [lastMessage, setLastMessage] = useState('')\n    const [lastPic, setLastPic] = useState('')\n\n\n\n    const getLastInfo = () => {\n    axios.get(`/messages/menuData?id=${id}`).then((res) => {\n      setLastMessage(res.data.message)\n      setLastPic(res.data.user.pic)\n    })\n  }\n    useEffect(()=>{\n        getLastInfo();\n        const channel = pusher.subscribe('messages');\n        channel.bind('newMessage', function (data) {\n            getLastInfo();\n        });\n    } , [id]);\n\n  return (\n        <div onClick = {() => dispatch(\n            setRooms({\n                messageId: id,\n                roomName: roomName,\n            })\n        )} \n        className = \"menuChat\">\n            <Avatar src = {lastPic}/>\n            <div className=\"chat_section\">\n                <h2>{roomName}</h2>\n                <p>{lastMessage}</p>\n\n            </div>\n        </div>\n    );\n}\n\nexport default MenuChat;\n","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/Messages.js",["71"],"import React, { useEffect, useState } from \"react\";\nimport \"./Messages.css\";\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useSelector } from \"react-redux\";\nimport { selectMessageId, selectRoomName } from \"../redux/messageSlice\";\nimport SingleMessage from \"./SingleMessage\";\nimport { selectUser } from \"../redux/userSlice\";\nimport Pusher from 'pusher-js';\nimport axios from '../axios';\n\n\n\nfunction Messages() {\n    const pusher = new Pusher('93990f0577676c3cf663', {\n      cluster: 'us2'\n    });\n\n    const messageId = useSelector(selectMessageId);\n    const roomName = useSelector(selectRoomName);\n    const user = useSelector(selectUser);\n    const [input,setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const getConvo = (messageId) => {\n        if (messageId) {\n            axios.get(`/messages/chat?id=${messageId}`).then((res) => {\n                setMessages(res.data[0].message_content)\n      })\n    }\n  }\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        axios.post(`/messages/new?id=${messageId}`, {\n            message: input,\n            time: Date.now(),\n            user: user\n    })\n\n    setInput(\"\");\n\n    };\n\n  useEffect(() => {\n      pusher.unsubscribe('messages');\n      getConvo(messageId);\n      const channel = pusher.subscribe('messages');\n      channel.bind('newMessage', function (data) {\n          getConvo(messageId)\n    });\n  }, [messageId]);\n\n  return (\n        <div className = \"messages\">\n            <div className=\"messages_header\">\n                <h4>\n                    To:<span className=\"messages_title\">{roomName}</span>\n                </h4>\n                <div className=\"details_icon\">\n                    <p> Details</p>\n                </div>\n            </div>\n            <div className=\"messages_body\">\n                {messages.map(({ user, _id, message, time }) => (\n            <SingleMessage key={_id} id={_id} sender={user} message={message} time={time} />\n          ))}\n            </div>\n            <div className=\"message_input\">\n                <form>\n                    <input\n                    value = {input}\n                    onChange={(e) => setInput(e.target.value)} \n                    placeholder='iMessage'\n                    type=\"text\" />\n                <button onClick = {sendMessage} type=\"submit\">\n                        ↑\n                </button>\n                </form>\n                <EmojiEmotionsIcon className = \"emoji\" />\n                <MicIcon className = \"mic\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Messages;\n","/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Messages/SingleMessage.js",[],"/Users/mutayyabc/Desktop/imessage-final/imessage-f/src/Login/firebase.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":47,"column":6,"nodeType":"78","endLine":47,"endColumn":8,"suggestions":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"76","severity":1,"message":"82","line":57,"column":13,"nodeType":"78","endLine":57,"endColumn":15,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":32,"column":9,"nodeType":"78","endLine":32,"endColumn":13,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"82","line":52,"column":6,"nodeType":"78","endLine":52,"endColumn":17,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["89"],["87"],["88"],"React Hook useEffect has a missing dependency: 'pusher'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'getLastInfo' and 'pusher'. Either include them or remove the dependency array.",["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [dispatch]",{"range":"101","text":"102"},"Update the dependencies array to be: [pusher]",{"range":"103","text":"104"},"Update the dependencies array to be: [getLastInfo, id, pusher]",{"range":"105","text":"106"},"Update the dependencies array to be: [messageId, pusher]",{"range":"107","text":"108"},[1169,1171],"[dispatch]",[1691,1693],"[pusher]",[958,962],"[getLastInfo, id, pusher]",[1484,1495],"[messageId, pusher]"]